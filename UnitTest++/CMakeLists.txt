cmake_minimum_required(VERSION 3.5)
project(UnitTest++)

# Remember x86/x64
if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET( EX_PLATFORM 64)
    SET( EX_PLATFORM_NAME "x64")
else (CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET( EX_PLATFORM 32)
    SET( EX_PLATFORM_NAME "x86")
endif (CMAKE_SIZEOF_VOID_P EQUAL 8)

set (CMAKE_DEBUG_POSTFIX "_Debug")
set (CMAKE_RELEASE_POSTFIX "_Release")
set (CMAKE_MINSIZEREL_POSTFIX "_MinSizeRel")
set (CMAKE_RELWITHDEBINFO_POSTFIX "_RelWithDebInfo")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/lib)

file(GLOB SOURCE_FILES_1
		"UnitTest++/*.cpp"
		"UnitTest++/*.h" )
source_group(src FILES ${SOURCE_FILES_1})
if (WIN32)
	file(GLOB SOURCE_FILES_2 "UnitTest++/Win32/*.*")
	source_group(src\\Win32 FILES ${SOURCE_FILES_2})
else()
	file(GLOB SOURCE_FILES_2 "UnitTest++/Posix/*.*")
	source_group(src\\Posix FILES ${SOURCE_FILES_2})
endif()

SET(SOURCE_FILES ${SOURCE_FILES_1} ${SOURCE_FILES_2})


add_library(${PROJECT_NAME} STATIC ${SOURCE_FILES})
set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX _${EX_PLATFORM_NAME}${CMAKE_DEBUG_POSTFIX})
set_target_properties(${PROJECT_NAME} PROPERTIES RELEASE_POSTFIX _${EX_PLATFORM_NAME}${CMAKE_RELEASE_POSTFIX})
set_target_properties(${PROJECT_NAME} PROPERTIES MINSIZEREL_POSTFIX _${EX_PLATFORM_NAME}${CMAKE_MINSIZEREL_POSTFIX})
set_target_properties(${PROJECT_NAME} PROPERTIES RELWITHDEBINFO_POSTFIX _${EX_PLATFORM_NAME}${CMAKE_RELWITHDEBINFO_POSTFIX})

set(${PROJECT_NAME}_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}
    CACHE INTERNAL "${PROJECT_NAME}: Include Directories" FORCE)
